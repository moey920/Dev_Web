1. jQuery 소개
    (1) jQuery란 : 간단한 명령어로 주요 기능을 쉽게 구현할 수 있도록 도와주는 자바스크립트 언어로 구성된 라이브러리
    (2) 현업에서는 사용 추세가 떨어지는 편이지만, 아직도 사용률을 매우 높다.
    (3) 예시
        // 자바스크립트 : document에서 title이라는 Id를 찾아 str1 변수에 받아오겠다.
        var str1 = document.getElementById("title");
        // 제이쿼리 : 매우 간단하다.
        $("#title")
    (4) jQuery 파일 적용하기
        1) https://jquery.com/ 에 접속하여 우측 상단 갈색 다운로드 버튼 클릭(현재는 ver.3.5.1)
        2) 압축안된 파일 Download the uncompressed, development jQuery 3.5.1 링크 우클릭 후 다른 이름으로 저장 - 바탕화면에 저장
        3) jQuery를 사용하고자 하는 에디터(vscode, elice 등)에 html, js, css 등이 존재하는 폴더 내에 jQuery 파일 업로드(혹은 드래그)
        4) html 코드 body 태그 내에 <script src="jquery-3.5.1.js"></script> 입력
        5) 스크립트 불러올 때 순서에 유의하기! 
            <script src="jquery-3.5.1.js"></script>
            <script src="index.js"></script>
            index.js를 먼저 불러오면 jquery가 적용되기 이전의 index.js를 먼저 실행하게 된다.
        6) 3점대 버전 jquery 사용 예시 (.js에 작성)
            $(function() {
                $("h1").css("color", "red");
            });
------------------------------------------------------------------------------------------------------------------------------------

2. jQuery Selector
    (1) jquery 선택자는 CSS 선택자와 유사한 구조
        1) Tag
            CSS : h1
            jquery : $("h1")
        2) Id
            CSS : #title
            jquery : $("title")
        3) Class
            CSS : .article
            jquery : $("article)

    (2) 디자인은 .css(‘CSS 속성’, ‘CSS 속성값’) 형태로 입력합니다.
        $(function() { // jquery 시작구문
            $("h1").css("background-color", "green");
            $("#background-blue").css("background-color", "blue");
            $(".background-red").css("background-color", "red");
        })

    
------------------------------------------------------------------------------------------------------------------------------------

3. jQuery Event
    (1) Mouse Event (https://api.jquery.com/category/events/mouse-events/)
        1) variety Mouse Event example
            $(function() {
                $("h1").click(function() {
                    $("h1").css("color", "red");
                }); // 객체.메서드 형태, 대상에 마우스를 클릭했을 때
                $("h1").mouseenter(function() {
                    $("h1").css("background-color", "yellow");
                });  // 대상에 마우스 올렸을 때
                $("h1").mouseleave(function() {
                    $("h1").css("background-color", "white");
                });  // 대상에 마우스 떼었을 때
            });

        (2) hide, show, toggle Event (Button Event)
            1) hide() 이벤트를 적용하면 영역 자체가 사라지므로, 레이아웃이 틀어지는 점에 유의할 것
            2) hide()는 해당 영역을 사라지게 한다, show()는 해당 영역을 보이게 한다, toggle()은 두 동작을 번갈아한다.
                $(function() {
                    $("#hide").click(function() {
                        $("h1").hide();
                    });
                    $("#show").click(function() {
                        $("h1").show();
                    });
                    $("#toggle").click(function() {
                        $("h1").toggle(); // hide+show
                    });
                });

        (3) fadeOut, fadeIn, fadeToggle Event
            1) 해당 선택자 영역을 클릭하면, 해당 영역이 서서히 사라진다.(hide() 이벤트와 마찬가지로 영역 자체 사라짐, 레이아웃 틀어짐)
            2) 메소드에서 fade다음에 나오는 메소드명은 대문자로 시작해야 됨에 유의한다.(fadeout과 같이 소문자로 적으면 실행안됌.)
                $(function() {
                    $("#fade-out").click(function() {
                        $("h1").fadeOut();
                    });
                    $("#fade-in").click(function() {
                        $("h1").fadeIn();
                    });
                    $("#fade-toggle").click(function() {
                        $("h1").fadeToggle();
                    });
                });

        (4) Class Event
            1) addClass, removeClass, toggleClass, hasClass : Class가 대문자로 시작됨에 유의한다.
            2) 코드
                // index.css의 .blue, .important 두 클래스가 있는지 확인하고, 
                토글 기능으로 없으면 추가하고 있으면 제거한다. 또한 addClass를 실행했을 때 css의 클래스가 적용되도록 한다.

                    $(function() {
                        $(".addClass").click(function() {
                            $("h1").addClass("blue"); //인자로는 추가하고자 하는 클래스명을 '.' 없이 그대로 입력한다.
                            $("h2").addClass("important");
                        });
                        
                        $(".removeClass").click(function() {
                            $("h1").removeClass("blue");
                            $("h2").removeClass("important");
                        });
                        
                        /* 변경을 복잡하게 하는 경우 
                        $(".hasClass").click(function() { //조건이 두 가지
                            if($("h1").hasClass("blue") && $("h2").hasClass("important")) {
                                $("h1").removeClass("blue");
                                $("h2").removeClass("important");
                            }
                            else {
                                $("h1").addClass("blue");
                                $("h2").addClass("important");
                            }
                        });
                        */
                        
                        // hasClass에서 확인하고 바꾸고자 하는 경우엔 toggleClass로 훨씬 편하게 작성할 수 있다.
                        $(".hasClass").click(function() {
                            $('h1').toggleClass("blue");
                            $('h2').toggleClass("important")
                        });
                    });
------------------------------------------------------------------------------------------------------------------------------------

4. this
